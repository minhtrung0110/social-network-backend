# we create a Docker image from source code
version: '3.8'
services:
  dev-database:
    image: postgres:15.0
    container_name: social-network
    ports:
      - 5434:5432 #{port in host(myPC)} : {port in Container}
    #environment variables, like: db's username, password...
    environment:
      POSTGRES_USER: minhtrung
      POSTGRES_PASSWORD: Minhtrung0110
      POSTGRES_DB: social-network
    networks:
      - nestjs-network
  #Create another container for "TEST"
  test-database:
    image: postgres:15.0
    container_name: test-database
    ports:
      - 5435:5432 #{port in host(myPC)} : {port in Container}
    #environment variables, like: db's username, password...
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Abc123456789
      POSTGRES_DB: testdb
    networks:
      - nestjs-network
  redis:
      image: redis:latest
      container_name: redis-social-network
      restart: always
      ports:
        - 6379:6379
      volumes:
        - redis_volume_data:/data
      environment:
      - REDIS_PASSWORD=Minhtrung0110
      - REDIS_PORT=6379
      - REDIS_DATABASES=16
networks:
  nestjs-network:
volumes:
  redis_volume_data:
#Create container,network,...from "docker composer" file:
#-d: deamon/background mode
#docker compose up -d
#if you want to start only specified services/container:
#docker compose up -d dev-database -d
#How to remove containers+volumes
#docker compose rm dev-database --stop --force --volumes